const fs = require('fs');
const path = require('path');
const line = require('@line/bot-sdk');
require('dotenv').config();

const config = {
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN,
  channelSecret: process.env.LINE_CHANNEL_SECRET
};

const client = new line.Client(config);

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu
const createRichMenu = async () => {
  try {
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Rich Menu ‡πÅ‡∏ö‡∏ö 3 ‡∏õ‡∏∏‡πà‡∏°
    const richMenuData = {
      size: {
        width: 2500,
        height: 1686
      },
      selected: true,
      name: "‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å",
      chatBarText: "‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å",
      areas: [
        {
          bounds: {
            x: 0,
            y: 0,
            width: 833,
            height: 1686
          },
          action: {
            type: "message",
            text: "‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï"
          }
        },
        {
          bounds: {
            x: 833,
            y: 0,
            width: 834,
            height: 1686
          },
          action: {
            type: "message",
            text: "‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï"
          }
        },
        {
          bounds: {
            x: 1667,
            y: 0,
            width: 833,
            height: 1686
          },
          action: {
            type: "message",
            text: "‡πÅ‡∏ä‡∏£‡πå"
          }
        }
      ]
    };

    // ‡∏•‡∏ö Rich Menu ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
    try {
      const existingMenus = await client.getRichMenuList();
      for (const menu of existingMenus) {
        await client.deleteRichMenu(menu.richMenuId);
        console.log('Deleted existing Rich Menu:', menu.richMenuId);
      }
    } catch (error) {
      console.log('No existing Rich Menu to delete or error deleting:', error.message);
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Rich Menu ‡πÉ‡∏´‡∏°‡πà
    const richMenuId = await client.createRichMenu(richMenuData);
    console.log('Rich Menu created with ID:', richMenuId);

    // ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Rich Menu
    const imagePath = path.join(__dirname, '..', 'public', 'rich-menu.png');
    
    if (!fs.existsSync(imagePath)) {
      console.error('Rich Menu image not found. Please create a rich-menu.png in the public folder.');
      console.log('Expected path:', imagePath);
      console.log('The image should be 2500x1686 pixels and divided into 3 sections:');
      console.log('- Left (0-833px): ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï');
      console.log('- Middle (833-1667px): ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï');
      console.log('- Right (1667-2500px): ‡πÅ‡∏ä‡∏£‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï');
      return;
    }
    
    const bufferImage = fs.readFileSync(imagePath);
    await client.setRichMenuImage(richMenuId, bufferImage);
    console.log('Rich Menu image uploaded');

    // ‡∏ï‡∏±‡πâ‡∏á Rich Menu ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô
    await client.setDefaultRichMenu(richMenuId);
    console.log('Default Rich Menu set');

    console.log('‚úÖ Rich Menu created and set successfully');
    console.log('Rich Menu includes:');
    console.log('1. ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï - ‡∏î‡∏π‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠');
    console.log('2. ‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï - ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï');
    console.log('3. ‡πÅ‡∏ä‡∏£‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï - ‡∏î‡∏π‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÅ‡∏•‡∏∞‡πÅ‡∏ä‡∏£‡πå');
    
  } catch (error) {
    console.error('‚ùå Error creating Rich Menu:', error);
    
    if (error.message.includes('Invalid richMenu size')) {
      console.log('üí° Hint: Make sure your rich-menu.png is exactly 2500x1686 pixels');
    }
    
    if (error.message.includes('The rich menu image must be')) {
      console.log('üí° Hint: Check if the image file format is PNG and file size is under 1MB');
    }
  }
};

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô
createRichMenu();