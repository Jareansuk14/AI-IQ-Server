//AI-Server/services/iqOptionService.js - Updated for Yahoo Finance
const { exec } = require('child_process');
const path = require('path');

class IQOptionService {
  constructor() {
    // üîÑ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô Yahoo Finance script
    this.pythonScriptPath = path.join(__dirname, '../scripts/yahoo_candle_checker.py');
  }

  // ‡∏î‡∏∂‡∏á‡∏™‡∏µ‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏à‡∏≤‡∏Å Yahoo Finance (‡πÅ‡∏ó‡∏ô IQ Option)
  async getCandleColor(pair, entryTime, round) {
    return new Promise((resolve) => {
      try {
        console.log(`üêç Calling Yahoo Finance API for ${pair} at ${entryTime}, round ${round}`);

        // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏õ‡∏•‡∏á pair format - Yahoo script ‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏á
        const targetPair = pair;
        
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á Python ‡∏û‡∏£‡πâ‡∏≠‡∏° parameters
        const command = `python "${this.pythonScriptPath}" "${targetPair}" "${entryTime}" ${round}`;
        
        console.log(`üîß Command: ${command}`);

        exec(command, { timeout: 30000 }, (error, stdout, stderr) => {
          if (error) {
            console.error(`‚ùå Python execution error: ${error.message}`);
            resolve({
              error: `‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Yahoo Finance ‡πÑ‡∏î‡πâ: ${error.message}`,
              pair: targetPair,
              entryTime,
              round
            });
            return;
          }

          if (stderr) {
            console.error(`‚ö†Ô∏è Python stderr: ${stderr}`);
            // ‡∏ñ‡∏∂‡∏á‡πÅ‡∏°‡πâ‡∏à‡∏∞‡∏°‡∏µ stderr ‡πÅ‡∏ï‡πà‡∏≠‡∏≤‡∏à‡∏°‡∏µ stdout ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ
          }

          try {
            console.log(`üì§ Python stdout:`, stdout);
            
            // ‡πÅ‡∏õ‡∏•‡∏á JSON result
            const result = JSON.parse(stdout.trim());
            
            if (result.error) {
              console.error(`‚ùå Yahoo Finance API error: ${result.error}`);
              resolve({
                error: result.error,
                pair: targetPair,
                entryTime,
                round
              });
              return;
            }

            console.log(`‚úÖ Successfully got candle data from Yahoo Finance:`, result);
            
            resolve({
              pair: result.symbol || targetPair,
              time: result.time,
              candleSize: result.candle_size,
              open: result.open,
              close: result.close,
              color: result.color, // 'green', 'red', ‡∏´‡∏£‡∏∑‡∏≠ 'doji'
              round,
              entryTime,
              timestamp: new Date().toISOString(),
              source: result.source || 'Yahoo Finance'
            });

          } catch (parseError) {
            console.error(`‚ùå JSON parse error: ${parseError.message}`);
            console.log(`üìù Raw stdout:`, stdout);
            
            resolve({
              error: `‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ: ${parseError.message}`,
              rawOutput: stdout,
              pair: targetPair,
              entryTime,
              round
            });
          }
        });

      } catch (err) {
        console.error(`‚ùå Unexpected error in getCandleColor: ${err.message}`);
        resolve({
          error: `‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î: ${err.message}`,
          pair,
          entryTime,
          round
        });
      }
    });
  }

  // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏õ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏π‡πà‡πÄ‡∏á‡∏¥‡∏ô - Yahoo script ‡∏à‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏á
  convertPairToIQFormat(pair) {
    // ‡∏Ñ‡∏á‡πÑ‡∏ß‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠ backward compatibility
    return pair;
  }

  // ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Yahoo Finance
  async testConnection() {
    try {
      console.log('üß™ Testing Yahoo Finance connection...');
      
      const testResult = await this.getCandleColor('EUR/USD', '09:00', 1);
      
      if (testResult.error) {
        return {
          success: false,
          error: testResult.error,
          message: '‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Yahoo Finance ‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß'
        };
      }

      return {
        success: true,
        message: '‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Yahoo Finance ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à',
        data: testResult
      };

    } catch (error) {
      console.error('‚ùå Connection test failed:', error);
      return {
        success: false,
        error: error.message,
        message: '‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ'
      };
    }
  }

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏≠‡∏ö (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö debug)
  async getMultipleCandles(pair, entryTime, rounds) {
    const results = [];
    
    for (let round = 1; round <= rounds; round++) {
      try {
        const result = await this.getCandleColor(pair, entryTime, round);
        results.push(result);
        
        // ‡∏£‡∏≠ 1 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å (‡∏ñ‡∏∂‡∏á‡πÅ‡∏°‡πâ Yahoo ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î)
        await new Promise(resolve => setTimeout(resolve, 1000));
      } catch (error) {
        results.push({
          error: error.message,
          round,
          pair,
          entryTime
        });
      }
    }
    
    return results;
  }

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏•‡∏≤‡∏î‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (Yahoo ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• 24/7 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö crypto)
  isMarketOpen() {
    const now = new Date();
    const day = now.getDay(); // 0 = Sunday, 6 = Saturday
    
    // Yahoo Finance ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤
    // ‡πÅ‡∏ï‡πà Forex ‡∏´‡∏•‡∏±‡∏Å‡∏à‡∏∞‡∏õ‡∏¥‡∏î‡∏™‡∏∏‡∏î‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
    if (day === 0 || day === 6) {
      return {
        forex: false, // Forex ‡∏õ‡∏¥‡∏î‡∏™‡∏∏‡∏î‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå
        crypto: true  // Crypto ‡πÄ‡∏õ‡∏¥‡∏î‡∏ï‡∏•‡∏≠‡∏î
      };
    }
    
    return {
      forex: true,
      crypto: true
    };
  }

  // ‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
  getUsageStats() {
    return {
      pythonScriptPath: this.pythonScriptPath,
      dataSource: 'Yahoo Finance',
      marketStatus: this.isMarketOpen(),
      supportedPairs: [
        // Forex
        'EUR/USD', 'GBP/USD', 'USD/JPY', 'USD/CHF',
        'AUD/USD', 'NZD/USD', 'USD/CAD', 'EUR/GBP',
        'EUR/JPY', 'GBP/JPY',
        // Crypto  
        'BTC/USD', 'ETH/USD', 'LTC/USD', 'ADA/USD',
        // Commodities
        'GOLD'
      ],
      features: [
        '‚úÖ ‡∏ü‡∏£‡∏µ 100% ‡πÑ‡∏°‡πà‡∏à‡∏≥‡∏Å‡∏±‡∏î',
        '‚úÖ ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á API Key',
        '‚úÖ Forex + Crypto + Commodities',
        '‚úÖ Real-time data',
        '‚úÖ Historical data',
        '‚úÖ 5-minute candlesticks'
      ],
      lastChecked: new Date().toISOString()
    };
  }
}

module.exports = new IQOptionService();